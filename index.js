// includes
const Telegraf = require('telegraf');
const TelegrafInlineMenu = require('telegraf-inline-menu');

// init app & menu
const app = new Telegraf(process.env.BOT_TOKEN);
const menu = new TelegrafInlineMenu(ctx => `Hey ${ctx.from.first_name}!`);

app.start((ctx) => ctx.reply("Welcome, " + ctx.message.from.last_name + " " + ctx.message.from.first_name));
app.command('test', (ctx) => ctx.reply('Test'));

// app.use((ctx) => ctx.reply(ctx.message.text + " —Å–∫–∞–∑–∞–ª " + ctx.message.from.last_name + " " + ctx.message.from.first_name));

app.hears('hi', ctx => {

	let msg = '';
	msg = '–°–∫–∞–∑–∞–ª –º–Ω–µ ' + ctx.message.text;

 return ctx.reply(msg);
});

app.command('go', ctx => {

	let msg = '';
	msg = '–°–∫–∞–∑–∞–ª –º–Ω–µ ' + ctx.message.text;

 return ctx.reply(msg);
});


let welcomeTest = '–ü—Ä–∏–≤–µ—Ç üëã,\n –ì–æ—Ç–æ–≤ —Å—ã–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π –≤ –∏–≥—Ä—É ‚ùî‚ùî‚ùî';
menu.setCommand('menu');
menu.simpleButton('–î–∞ ‚úîÔ∏è', 'a', {
  joinLastRow: true,
  doFunc: ctx => ctx.reply('üëç')
});

menu.simpleButton('–ù–µ—Ç ‚úñÔ∏è', 'b', {
  joinLastRow: true,
  doFunc: ctx => ctx.reply('üëé')
});

app.use(menu.init());

app.on('message', ctx => ctx.reply('–¢—ã –ø—ë—Å!'));

app.launch();